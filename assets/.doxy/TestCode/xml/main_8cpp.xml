<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="main_8cpp" kind="file" language="C++">
    <compoundname>main.cpp</compoundname>
    <includes local="no">Arduino.h</includes>
    <incdepgraph>
      <node id="2">
        <label>Arduino.h</label>
      </node>
      <node id="1">
        <label>main.cpp</label>
        <link refid="main_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
    </incdepgraph>
      <sectiondef kind="var">
      <memberdef kind="variable" id="main_8cpp_1adb8fbfcb22cf61e95405408ec4c2519a" prot="public" static="no" mutable="no">
        <type>const int</type>
        <definition>const int i_pin</definition>
        <argsstring></argsstring>
        <name>i_pin</name>
        <initializer>= 2</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/Arduino_DHBW_Spiel/Arduino_DHBW_Spiel/Engineering/COD_ENG_OUT_Pruefgeraet/src/main.cpp" line="3" column="11" bodyfile="/home/runner/work/Arduino_DHBW_Spiel/Arduino_DHBW_Spiel/Engineering/COD_ENG_OUT_Pruefgeraet/src/main.cpp" bodystart="3" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="main_8cpp_1a579f9308d208e0da834d7dd644c7dbcb" prot="public" static="no" mutable="no">
        <type>uint32_t</type>
        <definition>volatile uint32_t u32_start_time_high</definition>
        <argsstring></argsstring>
        <name>u32_start_time_high</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/Arduino_DHBW_Spiel/Arduino_DHBW_Spiel/Engineering/COD_ENG_OUT_Pruefgeraet/src/main.cpp" line="4" column="19" bodyfile="/home/runner/work/Arduino_DHBW_Spiel/Arduino_DHBW_Spiel/Engineering/COD_ENG_OUT_Pruefgeraet/src/main.cpp" bodystart="4" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="main_8cpp_1aa417e7fce5a227afb6b69a7bc5478994" prot="public" static="no" mutable="no">
        <type>uint32_t</type>
        <definition>volatile uint32_t u32_duration_high</definition>
        <argsstring></argsstring>
        <name>u32_duration_high</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/Arduino_DHBW_Spiel/Arduino_DHBW_Spiel/Engineering/COD_ENG_OUT_Pruefgeraet/src/main.cpp" line="5" column="19" bodyfile="/home/runner/work/Arduino_DHBW_Spiel/Arduino_DHBW_Spiel/Engineering/COD_ENG_OUT_Pruefgeraet/src/main.cpp" bodystart="5" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="main_8cpp_1a4cc5d37e75af8db981cc5218d7b79c77" prot="public" static="no" mutable="no">
        <type>uint32_t</type>
        <definition>volatile uint32_t u32_start_time_low</definition>
        <argsstring></argsstring>
        <name>u32_start_time_low</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/Arduino_DHBW_Spiel/Arduino_DHBW_Spiel/Engineering/COD_ENG_OUT_Pruefgeraet/src/main.cpp" line="6" column="19" bodyfile="/home/runner/work/Arduino_DHBW_Spiel/Arduino_DHBW_Spiel/Engineering/COD_ENG_OUT_Pruefgeraet/src/main.cpp" bodystart="6" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="main_8cpp_1a68cd29bd2dc47b16888c895bf61c1ac3" prot="public" static="no" mutable="no">
        <type>uint32_t</type>
        <definition>volatile uint32_t u32_duration_low</definition>
        <argsstring></argsstring>
        <name>u32_duration_low</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/Arduino_DHBW_Spiel/Arduino_DHBW_Spiel/Engineering/COD_ENG_OUT_Pruefgeraet/src/main.cpp" line="7" column="19" bodyfile="/home/runner/work/Arduino_DHBW_Spiel/Arduino_DHBW_Spiel/Engineering/COD_ENG_OUT_Pruefgeraet/src/main.cpp" bodystart="7" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="main_8cpp_1ad06c097bf60ded77fe3596bba30163c2" prot="public" static="no" mutable="no">
        <type>float</type>
        <definition>float fl_high_frequency</definition>
        <argsstring></argsstring>
        <name>fl_high_frequency</name>
        <initializer>= 0.0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/Arduino_DHBW_Spiel/Arduino_DHBW_Spiel/Engineering/COD_ENG_OUT_Pruefgeraet/src/main.cpp" line="8" column="7" bodyfile="/home/runner/work/Arduino_DHBW_Spiel/Arduino_DHBW_Spiel/Engineering/COD_ENG_OUT_Pruefgeraet/src/main.cpp" bodystart="8" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="main_8cpp_1abc322d0623752340cbffcfaf98e7b530" prot="public" static="no" mutable="no">
        <type>float</type>
        <definition>float fl_low_frequency</definition>
        <argsstring></argsstring>
        <name>fl_low_frequency</name>
        <initializer>= 0.0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/Arduino_DHBW_Spiel/Arduino_DHBW_Spiel/Engineering/COD_ENG_OUT_Pruefgeraet/src/main.cpp" line="9" column="7" bodyfile="/home/runner/work/Arduino_DHBW_Spiel/Arduino_DHBW_Spiel/Engineering/COD_ENG_OUT_Pruefgeraet/src/main.cpp" bodystart="9" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="main_8cpp_1a6391abc5c451ea33456ff925ead8783a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Pin_Change</definition>
        <argsstring>()</argsstring>
        <name>Pin_Change</name>
        <briefdescription>
<para>This function is responsible for handling pin state changes. </para>
        </briefdescription>
        <detaileddescription>
<para>\</para>
<para>This function reads the state of a digital pin and records the timing information for transitions between HIGH and LOW states. It calculates the duration of the HIGH and LOW states and updates the corresponding variables accordingly. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/Arduino_DHBW_Spiel/Arduino_DHBW_Spiel/Engineering/COD_ENG_OUT_Pruefgeraet/src/main.cpp" line="49" column="6" bodyfile="/home/runner/work/Arduino_DHBW_Spiel/Arduino_DHBW_Spiel/Engineering/COD_ENG_OUT_Pruefgeraet/src/main.cpp" bodystart="49" bodyend="64" declfile="/home/runner/work/Arduino_DHBW_Spiel/Arduino_DHBW_Spiel/Engineering/COD_ENG_OUT_Pruefgeraet/src/main.cpp" declline="11" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="main_8cpp_1a4fc01d736fe50cf5b977f755b675f11d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void setup</definition>
        <argsstring>()</argsstring>
        <name>setup</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/Arduino_DHBW_Spiel/Arduino_DHBW_Spiel/Engineering/COD_ENG_OUT_Pruefgeraet/src/main.cpp" line="13" column="6" bodyfile="/home/runner/work/Arduino_DHBW_Spiel/Arduino_DHBW_Spiel/Engineering/COD_ENG_OUT_Pruefgeraet/src/main.cpp" bodystart="13" bodyend="17"/>
      </memberdef>
      <memberdef kind="function" id="main_8cpp_1afe461d27b9c48d5921c00d521181f12f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void loop</definition>
        <argsstring>()</argsstring>
        <name>loop</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/Arduino_DHBW_Spiel/Arduino_DHBW_Spiel/Engineering/COD_ENG_OUT_Pruefgeraet/src/main.cpp" line="19" column="6" bodyfile="/home/runner/work/Arduino_DHBW_Spiel/Arduino_DHBW_Spiel/Engineering/COD_ENG_OUT_Pruefgeraet/src/main.cpp" bodystart="19" bodyend="39"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&lt;Arduino.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i_pin<sp/>=<sp/>2;<sp/></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="keyword">volatile</highlight><highlight class="normal"><sp/>uint32_t<sp/>u32_start_time_high<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="keyword">volatile</highlight><highlight class="normal"><sp/>uint32_t<sp/>u32_duration_high<sp/>=<sp/>0;<sp/></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="keyword">volatile</highlight><highlight class="normal"><sp/>uint32_t<sp/>u32_start_time_low<sp/>=<sp/>0;<sp/></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="keyword">volatile</highlight><highlight class="normal"><sp/>uint32_t<sp/>u32_duration_low<sp/>=<sp/>0;<sp/></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>fl_high_frequency<sp/>=<sp/>0.0;<sp/></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>fl_low_frequency<sp/>=<sp/>0.0;<sp/></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Pin_Change();</highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setup()<sp/>{</highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/>pinMode(i_pin,<sp/>INPUT);</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/>attachInterrupt(digitalPinToInterrupt(i_pin),<sp/>Pin_Change,<sp/>CHANGE);</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/>Serial.begin(9600);</highlight></codeline>
<codeline lineno="17"><highlight class="normal">}</highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>loop()<sp/>{</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(u32_duration_high<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/>fl_high_frequency<sp/>=<sp/>1000000.0<sp/>/<sp/>u32_duration_high;<sp/></highlight><highlight class="comment">//<sp/>Calculate<sp/>frequency<sp/>for<sp/>the<sp/>high<sp/>state<sp/>in<sp/>Hertz</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/>Serial.print(</highlight><highlight class="stringliteral">&quot;Duration<sp/>of<sp/>Pin<sp/>High:<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/>Serial.print(u32_duration_high);</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/>Serial.print(</highlight><highlight class="stringliteral">&quot;<sp/>microseconds,<sp/>Frequency:<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/>Serial.print(fl_high_frequency,<sp/>3);<sp/></highlight><highlight class="comment">//<sp/>Display<sp/>frequency<sp/>with<sp/>3<sp/>decimal<sp/>places</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/>Serial.println(</highlight><highlight class="stringliteral">&quot;<sp/>Hz&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/>u32_duration_high<sp/>=<sp/>0;<sp/></highlight><highlight class="comment">//<sp/>Reset<sp/>duration<sp/>for<sp/>the<sp/>next<sp/>measurement</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(u32_duration_low<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/>fl_low_frequency<sp/>=<sp/>1000000.0<sp/>/<sp/>u32_duration_low;<sp/></highlight><highlight class="comment">//<sp/>Calculate<sp/>frequency<sp/>for<sp/>the<sp/>low<sp/>state<sp/>in<sp/>Hertz</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/>Serial.print(</highlight><highlight class="stringliteral">&quot;Duration<sp/>of<sp/>Pin<sp/>Low:<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/>Serial.print(u32_duration_low);</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/>Serial.print(</highlight><highlight class="stringliteral">&quot;<sp/>microseconds,<sp/>Frequency:<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/>Serial.print(fl_low_frequency,<sp/>3);<sp/></highlight><highlight class="comment">//<sp/>Display<sp/>frequency<sp/>with<sp/>3<sp/>decimal<sp/>places</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/>Serial.println(</highlight><highlight class="stringliteral">&quot;<sp/>Hz&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/>u32_duration_low<sp/>=<sp/>0;<sp/></highlight><highlight class="comment">//<sp/>Reset<sp/>duration<sp/>for<sp/>the<sp/>next<sp/>measurement</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="39"><highlight class="normal">}</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Pin_Change()<sp/>{</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>state<sp/>=<sp/>digitalRead(i_pin);</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>currentTime<sp/>=<sp/>micros();</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(state<sp/>==<sp/>HIGH)<sp/>{</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/>u32_start_time_high<sp/>=<sp/>currentTime;<sp/></highlight><highlight class="comment">//<sp/>Save<sp/>current<sp/>time<sp/>for<sp/>the<sp/>beginning<sp/>of<sp/>the<sp/>high<sp/>state</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(u32_duration_low<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>u32_duration_low<sp/>=<sp/>currentTime<sp/>-<sp/>u32_start_time_low;<sp/></highlight><highlight class="comment">//<sp/>Calculate<sp/>elapsed<sp/>time<sp/>for<sp/>low<sp/>state</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/>u32_start_time_low<sp/>=<sp/>currentTime;<sp/></highlight><highlight class="comment">//<sp/>Save<sp/>current<sp/>time<sp/>for<sp/>the<sp/>beginning<sp/>of<sp/>the<sp/>low<sp/>state</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(u32_duration_high<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>u32_duration_high<sp/>=<sp/>currentTime<sp/>-<sp/>u32_start_time_high;<sp/></highlight><highlight class="comment">//<sp/>Calculate<sp/>elapsed<sp/>time<sp/>for<sp/>high<sp/>state</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="64"><highlight class="normal">}</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/home/runner/work/Arduino_DHBW_Spiel/Arduino_DHBW_Spiel/Engineering/COD_ENG_OUT_Pruefgeraet/src/main.cpp"/>
  </compounddef>
</doxygen>
